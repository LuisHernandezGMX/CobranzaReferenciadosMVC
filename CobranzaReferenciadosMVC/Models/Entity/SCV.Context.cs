//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CobranzaReferenciadosMVC.Models.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SCVEntities : DbContext
    {
        public SCVEntities()
            : base("name=SCVEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Poliza_Factura> Poliza_Factura { get; set; }
        public virtual DbSet<ReciboPago> ReciboPago { get; set; }
        public virtual DbSet<Referencia_Fovi> Referencia_Fovi { get; set; }
    
        public virtual ObjectResult<ReferenciaPrimaTotal> CalcularPrimaTotalPorReferencia(string referencia)
        {
            var referenciaParameter = referencia != null ?
                new ObjectParameter("Referencia", referencia) :
                new ObjectParameter("Referencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferenciaPrimaTotal>("CalcularPrimaTotalPorReferencia", referenciaParameter);
        }
    
        public virtual int UpdPagoReferenFoviDate(string referencia, string userPago, Nullable<System.DateTime> fecha)
        {
            var referenciaParameter = referencia != null ?
                new ObjectParameter("Referencia", referencia) :
                new ObjectParameter("Referencia", typeof(string));
    
            var userPagoParameter = userPago != null ?
                new ObjectParameter("UserPago", userPago) :
                new ObjectParameter("UserPago", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdPagoReferenFoviDate", referenciaParameter, userPagoParameter, fechaParameter);
        }
    }
}
